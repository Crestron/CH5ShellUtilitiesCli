    
Use `ch5-shell-cli` to create a new project. The following is the command:
    ch5-shell-cli create:project [options]

There are two ways to create a project using CLI. 

a. Passing a configuration JSON file: This file is similar to project-config.json. The project can be created with customized content like 'selectedTheme', newer pages and widgets, etc.. The user will not be prompted for any further information, and all details will be picked from the json file.

`ch5-shell-cli create:project --config ./downloads/sample-config.json`

b. Passing the name of the project:

`ch5-shell-cli create:project --projectName "my-new-shell-template"`

Since the configuration json file is not provided, all content information will be selected from a default config file available internally in the CLI project. 

If the projectName argument is not provided, then the user will be prompted to add a project name. 

Validation for projectName argument are as follows:
    - project name length should be greater than zero
    - all the characters in the project name must be lowercase i.e., no uppercase or mixed case names are allowed
    - project name can consist of hyphens
    - project name must not contain any non-url-safe characters (since name ends up being part of a URL)
    - project name should not start with . or _
    - project name should not contain any leading or trailing spaces
    - project name should not contain any of the following characters: ~)('!*
    - project name length cannot exceed 214   

You could also use `yarn` or `npm run` to import components. The following are the commands
    yarn validate:projectconfig
    npm run validate:projectconfig

You could use shortcut script `val:pc`:
    ch5-shell-cli val:pc

You could use shortcut script `val:pc` with yarn and npm commands as the following:
    yarn val:pc
    npm run val:pc

Based on the responses, the output is classified into errors and warnings. 
The project-config.json is validated for the following cases:

    1. Validate project-config.json based on project-config-schema.json
    2. Verify if the pages defined in project-config.json exists in the physical folders.
    3. Verify if the widgets defined in project-config.json exists in the physical folders.
    4. Verify if the pages names are repeated in project-config.json
    5. Check if the widget names are repeated in project-config.json
    6. Check if the page sequences are repeated.
    7. Check if the theme name is not available in the list of mentioned themes.
    8. Check if the theme name is repeated in the themes array.
    9. If menuOrientation is either 'vertical' or 'horizontal', then check if atleast one navigation item exists in the pages list.
    10. Check if the menuOrientation is 'vertical', and if there is an 'IconPosition' defined for navigation.
    11. Check if the menuOrientation is 'vertical', and if the menu is displayed.
    12. Check if the Pages array is empty.
    13. Check if page names are reused in widgets and vice-versa.

This validation will review the settings in project configuration file and inform the developer of any invalid configuration before running the browser or running on the touch screen. 
During the 'start' / 'build' process, this script will be executed and if there are errors (not warning), the script will not continue to the next step.