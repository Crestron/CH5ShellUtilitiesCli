    
You could also use `npm run` to export assets. The following are the command(s):
    npm run export:library -- [options]

You could use shortcut script `exp:l` with options:
    ch5-shell-cli exp:l [options]

You could use shortcut script `exp:l` with npm command as the following:
    npm run exp:l -- [options]

Export the complete components directory from './app/project/library/' folder. To achieve this, use the below commands:
    ch5-shell-cli export:library --all

You could also use `npm run` to export components. The following are the command(s):
    npm run export:library -- --all
    npm run exp:l -- --all

Export selected libraries from './app/project/libraries/' folder. In this case, the {fileNames} are mandatory in the command-prompt. The filename must follow the complete path starting from './app/project/libraries/....'. Only file names can be provided here (no folder paths). Multiple file names can be provided in the command-prompt. To achieve this, use the below commands:
    ch5-shell-cli export:library -l ./app/project/libraries/a.js ./app/project/libraries/b.js
    ch5-shell-cli export:library --list ./app/project/libraries/a.js ./app/project/libraries/b.js
    ch5-shell-cli exp:l -l ./app/project/libraries/a.js ./app/project/libraries/b.js
    
You could also use `npm run` to export libraries. The following are the command(s):    
    npm run export:library -- -l ./app/project/libraries/a.js ./app/project/libraries/b.js
    npm run export:library -- --list ./app/project/libraries/a.js ./app/project/libraries/b.js
    npm run exp:l -- -l ./app/project/libraries/a.js ./app/project/libraries/b.js