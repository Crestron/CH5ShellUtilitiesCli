Usage: 
    ch5-shell-cli export:library [options]
    
You could also use `yarn` or `npm run` to export assets. The following are the commands:
    yarn export:library [options]
    npm run export:library [options]

You could use shortcuts as the following:
    yarn exp:l
    npm run exp:l

Options:
    -h, --help,         Help for Exporting libraries from the './app/project/libraries/' folder
    -l, --list,         Prefix for list of library file names
    --all               Select this option to export all the library files

Export the complete components directory from './app/project/components/' folder. To achieve this, use the below commands:
    ch5-shell-cli export:library --all

You could also use `yarn` or `npm run` to export components. The following are the commands:
    yarn export:library --all
    npm run export:library -- --all

You could use shortcut script `exp:l` with yarn and npm commands as the following:
    yarn exp:l --all
    npm run exp:l -- --all

Export selected libraries from './app/project/libraries/' folder. In this case, the {fileNames} are mandatory in the command-prompt. The filename must follow the complete path starting from './app/project/libraries/....'. Only file names can be provided here (no folder paths). Multiple file names can be provided in the command-prompt. To achieve this, use the below commands:
    yarn export:library -l ./app/project/libraries/a.js ./app/project/libraries/b.js
    npm run export:library -- -l ./app/project/libraries/a.js ./app/project/libraries/b.js
    yarn export:library --list ./app/project/libraries/a.js ./app/project/libraries/b.js
    npm run export:library -- --list ./app/project/libraries/a.js ./app/project/libraries/b.js
    yarn exp:l -l ./app/project/libraries/a.js ./app/project/libraries/b.js
    npm run exp:l -- -l ./app/project/libraries/a.js ./app/project/libraries/b.js