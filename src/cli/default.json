{
  "generatePage": {
    "basePathForPages": "./app/project/components/pages/",
    "templatesPath": "./templates/generate-page/",
    "minLengthOfPageName": 2,
    "maxLengthOfPageName": 31,
    "commonContentInGeneratedFiles": [
      {
        "key": "autoGeneratedPageMessage",
        "value": "This code was automatically generated by Crestron's code generation tool."
      }
    ],
    "textMessages": {
      "SUCCESS_MESSAGE": "Congratulations! The page '{0}' has been created at the location '{1}'. The page has been added to the project-config.json file.",
      "SUCCESS_MESSAGE_NAVIGATION_ADDED": "The page has also been added to navigation menu. You can change the navigation styles in the project-config.json file.",
      "SUCCESS_MESSAGE_CONCLUSION": "If web server (ex: npm script ‘start’) is running, restart to load the new page.",
      "ERRORS": {
        "SOMETHING_WENT_WRONG": "Something went wrong. Either input values are missing/incorrect, or the program stopped intentionally/accidentally. Please try again.",
        "ERROR_IN_FOLDER_PATH": "Something went wrong with the input values for the folder path. Please check the folder path and try again.",
        "PROGRAM_STOPPED_OR_UNKNOWN_ERROR": "Either input values are missing/incorrect, or the program stopped intentionally/accidentally.",
        "PAGE_NAME_LENGTH": "Page Name is mandatory and must contain a minimum of {0} characters and a maximum of {1} characters.",
        "PAGE_NAME_MANDATORY": "Page Name is mandatory, must start with a letter, and can contain letters, numbers, spaces, underscore(s), and hyphen(s).",
        "PAGE_EXISTS_IN_PROJECT_CONFIG_JSON": "Page already exists in the project-config.json file. Please enter a new page name.",
        "WIDGET_EXISTS_IN_PROJECT_CONFIG_JSON": "Widget name already exists for a widget in the 'project' folder. Please enter a new page name.",
        "PAGE_CANNOT_START_WITH": "Page name cannot start with {0}.",
        "PAGE_DISALLOWED_KEYWORDS": "Page / Widget / Module file already exists in the 'template' folder. Please enter a new page name.",
        "PAGE_NAME_EMPTY_IN_REQUEST": "Page name is empty. Page Name is mandatory, must start with a letter, and can contain letters, numbers, spaces, underscore(s), and hyphen(s).\n",
        "PAGE_NAME_INVALID_ENTRY": "Page name does not meet the expected criterion. {0}\n",
        "ADD_TO_MENU_EMPTY_IN_REQUEST": "Menu Option is empty. Valid values are 'Y' or 'y' and 'N' or 'n'.\n",
        "ADD_TO_MENU_INVALID_ENTRY": "Invalid Menu Option. Valid values are 'Y' or 'y' and 'N' or 'n'.\n",
        "MESSAGE_TITLE": "Following error(s) were found in the command line statement:\n {0}",
        "TAB_DELIMITER": "-   ",
        "HTML_FILE_EXISTS": "File with the name '{0}' already exists in the path '{1}'. No Page Created."
      },
      "VALIDATIONS": {
        "GET_PAGE_NAME": "Please enter Page Name",
        "GET_ADD_TO_MENU_MESSAGE": "Please confirm that the new page should be added to Page Navigation",
        "GET_ADD_TO_MENU_HINT_YES": "Adds a menu item to the navigation menu",
        "GET_ADD_TO_MENU_HINT_NO": "A Page is created without adding menu item to the navigation menu",
        "GET_ADD_TO_MENU_YES": "Yes",
        "GET_ADD_TO_MENU_NO": "No"
      }
    },
    "automatedTests": {
      "enable": true,
      "enableComponentDeleteAfterTest": true
    }
  },
  "generateWidget": {
    "basePathForWidgets": "./app/project/components/widgets/",
    "templatesPath": "./shell-utilities/generate-widget/templates/",
    "minLengthOfWidgetName": 2,
    "maxLengthOfWidgetName": 31,
    "commonContentInGeneratedFiles": [
      {
        "key": "autoGeneratedWidgetMessage",
        "value": "This code was generated automatically by Crestron's code generation tool."
      }
    ],
    "textMessages": {
      "SUCCESS_MESSAGE": "Congratulations! The widget '{0}' has been created at the location '{1}'. The widget has been added to the project-config.json file.",
      "SUCCESS_MESSAGE_CONCLUSION": "If web server (ex: npm script ‘start’) is running, please restart to load the new widget.",
      "ERRORS": {
        "SOMETHING_WENT_WRONG": "Something went wrong. Either input values are missing/incorrect, or the program stopped intentionally/accidentally. Please try again.",
        "ERROR_IN_FOLDER_PATH": "Something went wrong with the input values for Folder Path. Please check the folder path and try again.",
        "PROGRAM_STOPPED_OR_UNKNOWN_ERROR": "Either input values are missing/incorrect, or the program stopped intentionally/accidentally.",
        "WIDGET_NAME_LENGTH": "Widget Name is mandatory and must be a minimum of {0} characters and a maximum of {1} characters.",
        "WIDGET_NAME_MANDATORY": "Widget Name is mandatory, must start with a letter, and can contain letters, numbers, spaces, underscore(s), and hyphen(s).",
        "WIDGET_EXISTS_IN_PROJECT_CONFIG_JSON": "Widget already exists in the project-config.json file. Please enter a new widget name.",
        "PAGE_EXISTS_IN_PROJECT_CONFIG_JSON": "Page name already exists for a widget in the 'project' folder. Please enter a new widget name.",
        "WIDGET_CANNOT_START_WITH": "Widget name cannot start with {0}.",
        "WIDGET_DISALLOWED_KEYWORDS": "Page / Widget / Module file already exists in the 'template' folder. Please enter a new widget name.",
        "WIDGET_NAME_EMPTY_IN_REQUEST": "Widget name is empty. Widget Name is mandatory, must start with a letter, and can contain letters, numbers, spaces, underscore(s), and hyphen(s).\n",
        "WIDGET_NAME_INVALID_ENTRY": "Widget name does not meet the expected criterion. {0}\n",
        "MESSAGE_TITLE": "Following error(s) were found in the command line statement:\n {0}",
        "TAB_DELIMITER": "-   ",
        "HTML_FILE_EXISTS": "File with the name '{0}' already exists in the path '{1}'. No Widget Created."
      },
      "VALIDATIONS": {
        "GET_WIDGET_NAME": "Please enter Widget Name"
      }
    }
  },
  "deleteComponents": {
    "templatesPath": "./shell-utilities/delete-components/templates/",
    "textMessages": {
      "SUCCESS_MESSAGE": "Congratulations! The component(s) '{0}' have been deleted from the project. The necessary change has been made to the project-config.json file.",
      "SUCCESS_MESSAGE_WITH_EXCEPTION": "The component(s) '{0}' are not valid components in the project.",
      "SUCCESS_MESSAGE_CONCLUSION": "If web server (ex: npm script ‘start’) is running, please restart the project.",
      "VALIDATIONS": {
        "SELECT_COMPONENT_TO_DELETE": "Please select the pages / widgets that you want to delete. Click on the 'space' bar to select the component(s).",
        "HINT_COMPONENT_DETAILS": "{0} located at {1}",
        "ARE_YOU_SURE_TO_DELETE": "Please confirm that you want to delete the selected component(s). Once deleted, the component cannot be restored. You should export the components before deleting them.",
        "CONFIRMATION_OPTION_YES": "Yes",
        "CONFIRMATION_OPTION_NO": "No",
        "CONFIRMATION_OPTION_YES_DESCRIPTION": "The selected component(s) will be permanently deleted. These files cannot be restored once deleted.",
        "CONFIRMATION_OPTION_NO_DESCRIPTION": "The delete component process will be cancelled."
      },
      "ERRORS": {
        "NO_PAGES_WIDGETS_AVAILABLE_IN_PROJECT": "The are no pages and widgets available in the project.",
        "INVALID_PARAM_INPUTS": "There are no page or widget names available in the project as per the inputs in the command prompt.",
        "MESSAGE_TITLE": "Following error(s) were found in the command line statement:\n {0}",
        "NO_COMPONENTS_FOR_DELETION": "No components have been selected for deletion.",
        "DO_NOT_DELETE_COMPONENTS": "Process terminated since you do not wish to delete the selected components.",
        "SOMETHING_WENT_WRONG": "Something went wrong. Please try again.",
        "PROGRAM_STOPPED_OR_UNKNOWN_ERROR": "Either input values are missing/incorrect, or the program stopped intentionally/accidentally."
      }
    }
  },
  "exportProject": {
    "templatesPath": "./shell-utilities/export-project/templates/",
    "zipFileDestinationPath": "./dist/",
    "ignoreFilesFolders": [
      "node_modules",
      "dist",
      "www",
      "/out-tsc",
      ".project",
      ".classpath",
      ".settings/",
      ".sublime-workspace",
      ".sass-cache",
      "npm-debug.log",
      "yarn-error.log",
      "testem.log",
      ".DS_Store",
      ".lock",
      "package-lock.json",
      "Thumbs.db"
    ],
    "textMessages": {
      "SUCCESS_MESSAGE": "Congratulations! The project is exported to '{0}'."
    }
  },
  "exportAssets": {
    "requiredFolderPath": "./app/project/assets/",
    "templatesPath": "./shell-utilities/export-assets/templates/",
    "zipFolderName": "exported-assets",
    "outputFileName": "exported-assets.zip",
    "outputTempFolderName": "Exported-Assets-Code-Folder-Temp",
    "zipFileDestinationPath": "./dist/",
    "ignoreFilesFolders": [
      ".DS_Store",
      ".lock",
      ".db"
    ],
    "textMessages": {
      "SUCCESS_MESSAGE_ALL": "Congratulations! All the project assets are exported to '{0}'.",
      "SUCCESS_MESSAGE_SPECIFIC": "Congratulations! The project assets '{1}' are exported to '{0}'.",
      "SUCCESS_MESSAGE_SPECIFIC_WITH_ERROR": "Congratulations! The project assets '{1}' are exported to '{0}'. The assets '{2}' are not available in the project assets folder.",
      "FAILURE_MESSAGE_NO_DIR": "Export failed. The directory does not exist.",
      "FAILURE_MESSAGE_NO_FILES_IN_DIR": "Export failed. The are no files to export in the directory.",
      "FAILURE_MESSAGE_NO_VALID_FILES_IN_DIR": "Export Assets failed.",
      "FAILURE_MESSAGE_NO_VALID_INPUTS": "Export Assets failed. The input filenames provided are either invalid or they do not exist in the assets folder.",
      "FAILURE_MESSAGE_INPUT_PARAMS_EMPTY_IN_REQUEST": "There are no input filenames provided to export assets."
    }
  },
  "exportAll": {
    "requiredFolderPath": "./app/project/",
    "templatesPath": "./shell-utilities/export-all/templates/",
    "zipFolderName": "exported-all",
    "outputFileName": "exported-all.zip",
    "outputTempFolderName": "Exported-All-Code-Folder-Temp",
    "zipFileDestinationPath": "./dist/",
    "ignoreFilesFolders": [
      ".DS_Store",
      ".lock",
      ".db"
    ],
    "textMessages": {
      "SUCCESS_MESSAGE_ALL": "Congratulations! './app/project' folder exported to '{0}'.",
      "SUCCESS_MESSAGE_SPECIFIC": "Congratulations! The selected files '{1}' are exported to '{0}'.",
      "SUCCESS_MESSAGE_SPECIFIC_WITH_ERROR": "Congratulations! The selected files '{1}' are exported to '{0}'. The files '{2}' are not available in the './app/project' folder.",
      "FAILURE_MESSAGE_NO_DIR": "Export failed. The directory does not exist.",
      "FAILURE_MESSAGE_NO_FILES_IN_DIR": "Export failed. The are no files to export in the directory.",
      "FAILURE_MESSAGE_NO_VALID_FILES_IN_DIR": "Export All failed. There are no valid files in the folder.",
      "FAILURE_MESSAGE_NO_VALID_INPUTS": "Export All Ffailed. The input filenames provided are either invalid or they do not exist in the './app/project' folder.",
      "FAILURE_MESSAGE_INPUT_PARAMS_EMPTY_IN_REQUEST": "There are no input filenames provided to export all."
    }
  },
  "exportLibraries": {
    "requiredFolderPath": "./app/project/libraries/",
    "templatesPath": "./shell-utilities/export-libraries/templates/",
    "zipFolderName": "exported-library",
    "outputFileName": "exported-library.zip",
    "outputTempFolderName": "Exported-Library-Code-Folder-Temp",
    "zipFileDestinationPath": "./dist/",
    "ignoreFilesFolders": [
      ".DS_Store",
      ".lock",
      ".db"
    ],
    "textMessages": {
      "SUCCESS_MESSAGE_ALL": "Congratulations! All the project libraries are exported to '{0}'.",
      "SUCCESS_MESSAGE_SPECIFIC": "Congratulations! The project libraries '{1}' are exported to '{0}'.",
      "SUCCESS_MESSAGE_SPECIFIC_WITH_ERROR": "Congratulations! The project libraries '{1}' are exported to '{0}'. The libraries '{2}' are not available in the project libraries folder.",
      "FAILURE_MESSAGE_NO_DIR": "Export failed. The directory does not exist.",
      "FAILURE_MESSAGE_NO_FILES_IN_DIR": "Export failed. The are no files to export in the directory.",
      "FAILURE_MESSAGE_NO_VALID_FILES_IN_DIR": "Export Library failed.",
      "FAILURE_MESSAGE_NO_VALID_INPUTS": "Export Library failed. The input filenames provided are either invalid or they do not exist in the libraries folder.",
      "FAILURE_MESSAGE_INPUT_PARAMS_EMPTY_IN_REQUEST": "There are no input filenames provided to export libraries."
    }
  },
  "exportComponents": {
    "requiredFolderPath": "./app/project/components/",
    "templatesPath": "./shell-utilities/export-components/templates/",
    "zipFolderName": "exported-components",
    "outputFileName": "exported-components.zip",
    "outputTempFolderName": "Exported-Components-Code-Folder-Temp",
    "zipFileDestinationPath": "./dist/",
    "ignoreFilesFolders": [
      ".DS_Store",
      ".lock",
      ".db"
    ],
    "textMessages": {
      "SUCCESS_MESSAGE_ALL": "Congratulations! All the project components are exported to '{0}'.",
      "SUCCESS_MESSAGE_SPECIFIC": "Congratulations! The project components '{1}' are exported to '{0}'.",
      "SUCCESS_MESSAGE_SPECIFIC_WITH_ERROR": "Congratulations! The project components '{1}' are exported to '{0}'. The components '{2}' are not available in the project components folder.",
      "FAILURE_MESSAGE_NO_DIR": "Export failed. The directory does not exist.",
      "FAILURE_MESSAGE_NO_FILES_IN_DIR": "Export failed. The are no files to export in the directory.",
      "FAILURE_MESSAGE_NO_VALID_FILES_IN_DIR": "Export Components failed.",
      "FAILURE_MESSAGE_NO_VALID_INPUTS": "Export Components failed. The input filenames provided are either invalid or they do not exist in the components folder.",
      "FAILURE_MESSAGE_INPUT_PARAMS_EMPTY_IN_REQUEST": "There are no input filenames provided to export components."
    }
  },
  "importAssets": {
    "requiredFolderPath": "./app/project/assets/",
    "templatesPath": "./shell-utilities/import-assets/templates/",
    "zipFolderName": "imported-assets",
    "exportedFolderName": "exported-assets",
    "outputFileName": "imported-assets.zip",
    "outputTempFolderName": "Imported-Assets-Code-Folder-Temp",
    "ignoreFilesFolders": [
      ".DS_Store",
      ".lock",
      "Thumbs.db"
    ],
    "zipFileDestinationPath": "./dist/",
    "textMessages": {
      "VALIDATIONS": {
        "OVERWRITE_FILES": "Do you wish to overwrite the files?",
        "OVERWRITE_FILES_YES": "Yes",
        "OVERWRITE_FILES_NO": "No",
        "OVERWRITE_FILES_HINT_YES": "Select Yes to overwrite the files",
        "OVERWRITE_FILES_HINT_NO": "Select No to retain the original files",
        "EXISTING_FILES_IN_IMPORT_FOLDER": "The following files already exist in the project: ",
        "NO_NEW_FILES_AVAILABLE_TO_BE_IMPORTED": "There are no new files available to be imported.",
        "NEW_FILES_TO_BE_IMPORTED": "The following are new files to be imported: ",
        "INVALID_FILES_IN_IMPORT_LIST": "The following are invalid files: "
      },
      "SUCCESS_MESSAGE_ALL": "Congratulations! All the project assets are successfully imported.",
      "SUCCESS_MESSAGE_SPECIFIC": "Congratulations! The following assets are imported into the project:\n{0}",
      "FAILURE_MESSAGE_INVALID_ZIP_FILE_EXTRACT": "Invalid zip file used for importing assets. Use exported-assets.zip file to perform 'import:assets'. This file must be generated using the 'export:assets' script.",
      "SUCCESS_MESSAGE_SPECIFIC_WITH_ERROR": "Congratulations! The following assets are imported into the project:\n{0}\n\nThe following assets are not imported into the project:\n{1}\n\nThe following assets are invalid:\n{2}",
      "FAILURE_MESSAGE_NO_VALID_FILES_IN_DIR": "Import Assets failed.",
      "FAILURE_MESSAGE_NO_VALID_OVERWRITE_FILES": "Import Assets failed. There are no new files available for import.",
      "FAILURE_MESSAGE_NO_VALID_INPUTS": "Import Assets failed. The input filenames provided are either invalid or they do not exist in the assets folder.",
      "FAILURE_MESSAGE_INPUT_PARAMS_INVALID_IN_REQUEST": "There are no valid input filenames provided to import assets. The following input files do not exist in the {0} file:\n{1}",
      "FAILURE_MESSAGE_INPUT_PARAMS_EMPTY_IN_REQUEST": "There are no input filenames provided to import assets.",
      "FAILURE_MESSAGE_INPUT_PARAM_ZIP_FILE_MISSING": "The zip file path to import assets is missing / invalid. Ensure add -z {path} or --zipFile {path} to the command prompt. Also, either set --all for importing all files Or set the import file paths using -l {path(s)} or --list {path(s)}.",
      "ERRORS": {
        "SOMETHING_WENT_WRONG": "Something went wrong. Please try again.",
        "PROGRAM_STOPPED_OR_UNKNOWN_ERROR": "Either input values are missing/incorrect, or the program stopped intentionally/accidentally."
      }
    }
  },
  "importLibraries": {
    "requiredFolderPath": "./app/project/libraries/",
    "templatesPath": "./shell-utilities/import-libraries/templates/",
    "zipFolderName": "imported-libraries",
    "exportedFolderName": "exported-library",
    "outputFileName": "imported-libraries.zip",
    "outputTempFolderName": "Imported-Libraries-Code-Folder-Temp",
    "zipFileDestinationPath": "./dist/",
    "ignoreFilesFolders": [
      ".DS_Store",
      ".lock",
      "Thumbs.db"
    ],
    "textMessages": {
      "VALIDATIONS": {
        "OVERWRITE_FILES": "Do you wish to overwrite the files?",
        "OVERWRITE_FILES_YES": "Yes",
        "OVERWRITE_FILES_NO": "No",
        "OVERWRITE_FILES_HINT_YES": "Select Yes to overwrite the files",
        "OVERWRITE_FILES_HINT_NO": "Select No to retain the original files",
        "EXISTING_FILES_IN_IMPORT_FOLDER": "The following files already exist in the project: ",
        "NO_NEW_FILES_AVAILABLE_TO_BE_IMPORTED": "There are no new files available to be imported.",
        "NEW_FILES_TO_BE_IMPORTED": "The following are new files to be imported: ",
        "INVALID_FILES_IN_IMPORT_LIST": "The following are invalid files: "
      },
      "SUCCESS_MESSAGE_ALL": "Congratulations! All the project libraries are successfully imported.",
      "SUCCESS_MESSAGE_SPECIFIC": "Congratulations! The following libraries are imported into the project:\n{0}",
      "SUCCESS_MESSAGE_SPECIFIC_WITH_ERROR": "Congratulations! The following libraries are imported into the project:\n{0}\n\nThe following libraries are not imported into the project:\n{1}\n\nThe following components are invalid:\n{2}",
      "FAILURE_MESSAGE_INVALID_ZIP_FILE_EXTRACT": "Invalid zip file used for importing libraries. Use exported-library.zip file to perform 'import:library'. This file must be generated using the 'export:library' script.",
      "FAILURE_MESSAGE_NO_VALID_FILES_IN_DIR": "Import Library Failed.",
      "FAILURE_MESSAGE_NO_VALID_OVERWRITE_FILES": "Import Library Failed. There are no new files available for import.",
      "FAILURE_MESSAGE_NO_VALID_INPUTS": "Import Library Failed. The input filenames provided are either invalid or they do not exist in the libraries folder.",
      "FAILURE_MESSAGE_INPUT_PARAMS_INVALID_IN_REQUEST": "There are no valid input filenames provided to import libraries. The following input files do not exist in the {0} file:\n{1}",
      "FAILURE_MESSAGE_INPUT_PARAMS_EMPTY_IN_REQUEST": "There are no input filenames provided to import libraries.",
      "FAILURE_MESSAGE_INPUT_PARAM_ZIP_FILE_MISSING": "The zip file path to import libraries is missing / invalid. Ensure add -z {path} or --zipFile {path} to the command prompt. Also, either set --all for importing all files Or set the import file paths using -l {path(s)} or --list {path(s)}.",
      "ERRORS": {
        "SOMETHING_WENT_WRONG": "Something went wrong. Please try again.",
        "PROGRAM_STOPPED_OR_UNKNOWN_ERROR": "Either input values are missing/incorrect, or the program stopped intentionally/accidentally."
      }
    }
  },
  "importComponents": {
    "requiredFolderPath": "./app/project/components/",
    "templatesPath": "./shell-utilities/import-components/templates/",
    "zipFolderName": "imported-components",
    "exportedFolderName": "exported-components",
    "outputFileName": "imported-components.zip",
    "outputTempFolderName": "Imported-Components-Code-Folder-Temp",
    "zipFileDestinationPath": "./dist/",
    "ignoreFilesFolders": [
      ".DS_Store",
      ".lock",
      "Thumbs.db"
    ],
    "textMessages": {
      "VALIDATIONS": {
        "OVERWRITE_FILES": "Do you wish to overwrite the files?",
        "OVERWRITE_FILES_YES": "Yes",
        "OVERWRITE_FILES_NO": "No",
        "OVERWRITE_FILES_HINT_YES": "Select Yes to overwrite the files",
        "OVERWRITE_FILES_HINT_NO": "Select No to retain the original files",
        "EXISTING_FILES_IN_IMPORT_FOLDER": "The following files already exist in the project: ",
        "NO_NEW_FILES_AVAILABLE_TO_BE_IMPORTED": "There are no new files available to be imported.",
        "NEW_FILES_TO_BE_IMPORTED": "The following are new files to be imported: ",
        "INVALID_FILES_IN_IMPORT_LIST": "The following are invalid files: "
      },
      "SUCCESS_MESSAGE_ALL": "Congratulations! All the project components are successfully imported.",
      "SUCCESS_MESSAGE_SPECIFIC": "Congratulations! The following components are imported into the project:\n{0}",
      "SUCCESS_MESSAGE_SPECIFIC_WITH_ERROR": "Congratulations! The following components are imported into the project:\n{0}\n\nThe following components are not imported into the project:\n{1}\n\nThe following components are invalid:\n{2}",
      "FAILURE_MESSAGE_INVALID_ZIP_FILE_EXTRACT": "Invalid zip file used for importing components. Use exported-components.zip file to perform 'import:components'. This file must be generated using the 'export:components' script.",
      "FAILURE_MESSAGE_NO_VALID_FILES_IN_DIR": "Import Components failed.",
      "FAILURE_MESSAGE_NO_VALID_OVERWRITE_FILES": "Import Components failed. There are no new files available for import.",
      "FAILURE_MESSAGE_NO_VALID_INPUTS": "Import Components failed. The input filenames provided are either invalid or they do not exist in the components folder.",
      "FAILURE_MESSAGE_INPUT_PARAMS_INVALID_IN_REQUEST": "There are no valid input filenames provided to import components. The following input files do not exist in the {0} file:\n{1}",
      "FAILURE_MESSAGE_INPUT_PARAMS_EMPTY_IN_REQUEST": "There are no input filenames provided to import components.",
      "FAILURE_MESSAGE_INPUT_PARAM_ZIP_FILE_MISSING": "The zip file path to import components is missing / invalid. Ensure add -z {path} or --zipFile {path} to the command prompt. Also, either set --all for importing all files Or set the import file paths using -l {path(s)} or --list {path(s)}.",
      "ERRORS": {
        "SOMETHING_WENT_WRONG": "Something went wrong. Please try again.",
        "PROGRAM_STOPPED_OR_UNKNOWN_ERROR": "Either input values are missing/incorrect, or the program stopped intentionally/accidentally."
      }
    }
  },
  "importAll": {
    "requiredFolderPath": "./app/project/",
    "templatesPath": "./shell-utilities/import-all/templates/",
    "zipFolderName": "imported-all",
    "exportedFolderName": "exported-all",
    "outputFileName": "imported-all.zip",
    "outputTempFolderName": "Imported-All-Code-Folder-Temp",
    "zipFileDestinationPath": "./dist/",
    "ignoreFilesFolders": [
      ".DS_Store",
      ".lock",
      "Thumbs.db"
    ],
    "textMessages": {
      "VALIDATIONS": {
        "OVERWRITE_FILES": "Do you wish to overwrite the files?",
        "OVERWRITE_FILES_YES": "Yes",
        "OVERWRITE_FILES_NO": "No",
        "OVERWRITE_FILES_HINT_YES": "Select Yes to overwrite the files",
        "OVERWRITE_FILES_HINT_NO": "Select No to retain the original files",
        "EXISTING_FILES_IN_IMPORT_FOLDER": "The following files already exist in the project: ",
        "NO_NEW_FILES_AVAILABLE_TO_BE_IMPORTED": "There are no new files available to be imported.",
        "NEW_FILES_TO_BE_IMPORTED": "The following are new files to be imported: ",
        "INVALID_FILES_IN_IMPORT_LIST": "The following are invalid files: "
      },
      "SUCCESS_MESSAGE_ALL": "Congratulations! All the project assets, libraries, and components are successfully imported.",
      "SUCCESS_MESSAGE_SPECIFIC": "Congratulations! The following assets, libraries, and components are imported into the project:\n{0}",
      "SUCCESS_MESSAGE_SPECIFIC_WITH_ERROR": "Congratulations! The following assets, libraries, and components are imported into the project:\n{0}\n\nThe following assets, libraries, and components are not imported into the project:\n{1}\n\nThe following assets, libraries, and components are invalid:\n{2}",
      "FAILURE_MESSAGE_INVALID_ZIP_FILE_EXTRACT": "Invalid zip file used for importing all. Use exported-all.zip file to perform 'import:all'. This file must be generated using the 'export:all' script.",
      "FAILURE_MESSAGE_NO_VALID_FILES_IN_DIR": "Import All failed.",
      "FAILURE_MESSAGE_NO_VALID_OVERWRITE_FILES": "Import All failed. There are no new files available for import.",
      "FAILURE_MESSAGE_NO_VALID_INPUTS": "Import All failed. The input filenames provided are either invalid or they do not exist in the assets, libraries, and components folders.",
      "FAILURE_MESSAGE_INPUT_PARAMS_INVALID_IN_REQUEST": "There are no valid input filenames provided to import all. The following input files do not exist in the {0} file:\n{1}",
      "FAILURE_MESSAGE_INPUT_PARAMS_EMPTY_IN_REQUEST": "There are no input filenames provided to import all.",
      "FAILURE_MESSAGE_INPUT_PARAM_ZIP_FILE_MISSING": "The zip file path to import all is missing / invalid. Ensure add -z {path} or --zipFile {path} to the command prompt. Also, either set --all for importing all files Or set the import file paths using -l {path(s)} or --list {path(s)}.",
      "ERRORS": {
        "SOMETHING_WENT_WRONG": "Something went wrong. Please try again.",
        "PROGRAM_STOPPED_OR_UNKNOWN_ERROR": "Either input values are missing/incorrect, or the program stopped intentionally/accidentally."
      }
    }
  },
  "validateProjectConfig": {
    "templatesPath": "./shell-utilities/project-config/templates/",
    "textMessages": {
      "VALIDATIONS": {
        "SCHEMA": {
          "HEADER": "project-config.json file validation"
        },
        "PAGE_MISSING_FILE_FOLDER": {
          "HEADER": "Missing / Incorrect path for File(s) / Folder(s) for the page '{0}'",
          "FOLDER_PATH_MISSING": "The folder path '{0}' does not exist for the file '{1}'.",
          "FILE_NOT_IN_FOLDER": "File '{0}' does not exist in the path '{1}' for the file '{2}'."
        },
        "WIDGET_MISSING_FILE_FOLDER": {
          "HEADER": "Missing / Incorrect path for File(s) / Folder(s) for the widget '{0}'",
          "FOLDER_PATH_MISSING": "The folder path '{0}' does not exist for the file '{1}'.",
          "FILE_NOT_IN_FOLDER": "File '{0}' does not exist in the path '{1}' for the file '{2}'."
        },
        "PAGE_NAMES_REPEATED": {
          "HEADER": "Page names repeated in project-config.json",
          "MESSAGE": "Page name '{0}' is repeated."
        },
        "WIDGET_NAMES_REPEATED": {
          "HEADER": "Widget names repeated in project-config.json",
          "MESSAGE": "Widget name '{0}' is repeated."
        },
        "DEFAULT_VIEW_INVALID": {
          "HEADER": "content.$defaultView in project-config.json",
          "ERROR_MESSAGE": "There is no page in the project-config.json file with the $defaultView '{0}'.",
          "ERROR_MESSAGE_NO_NAVIGATION": "The page defined in $defaultView '{0}' does not have a navigation node.",
          "WARNING_MESSAGE": "$defaultView is empty in the project-config.json file."
        },
        "NAVIGATION_PAGE_SEQUENCE": {
          "HEADER": "Page sequence for navigation",
          "MESSAGE": "Page '{0}' has duplicate sequence."
        },
        "SELECTED_THEME_INCORRECT": {
          "HEADER": "Invalid selected theme",
          "THEME_NOT_IN_LIST": "Selected theme '{0}' is not available in the list of themes.",
          "THEME_NOT_AVAILABLE": "Selected theme cannot be empty.",
          "THEME_NAMING_STYLE": "Selected theme '{0}' and theme name in the list of themes '{1}' have a case mismatch."
        },
        "REPEATED_THEME_NAME_IN_ARRAY": {
          "HEADER": "Duplicate theme name",
          "MESSAGE": "Theme name '{0}' is repeated in the themes array."
        },
        "ATLEAST_ONE_MENU": {
          "HEADER": "Minimum one navigation item",
          "MESSAGE": "For 'horizontal' or 'vertical' menu, there must be at least one page with navigation."
        },
        "ICON_POSITION_VERTICAL": {
          "HEADER": "Icon Position",
          "MESSAGE": "Icon position is applicable for 'horizontal' menu. The menuOrientation defined in project-config.json file is 'vertical' menu. The iconPosition will not be applied to the navigation icons."
        },
        "VERTICAL_MENU_HEADER_AVAILABLE": {
          "HEADER": "Header hidden for Vertical menu",
          "MESSAGE": "The header cannot be hidden for 'vertical' menu orientation."
        },
        "EMPTY_PAGES_ARRAY": {
          "HEADER": "No pages found",
          "MESSAGE": "There are no pages available in the project. At least one page is required for the project to run."
        },
        "PAGE_AND_WIDGET_DUPLICATES": {
          "HEADER": "Same Page name and Widget name",
          "MESSAGE": "Page name and Widget name are the same for page '{0}' and '{1}'."
        },
        "HEADER_COMPONENT_MISMATCH": {
          "HEADER": "Header Component Name",
          "ERROR_MESSAGE_NAVIGATION": "The page used in 'header -> $component' has navigation node. This node must not be present.",
          "ERROR_MESSAGE_STANDALONE_TRUE": "The page used in 'header -> $component' has standAloneView set to true. This node must be set to false.",
          "ERROR_MESSAGE_PAGE_MISSING": "The page used in 'header -> $component' does not exist." 
        },
        "FOOTER_COMPONENT_MISMATCH": {
          "HEADER": "Footer Component Name",
          "ERROR_MESSAGE_NAVIGATION": "The page used in 'footer -> $component' has navigation node. This node must not be present.",
          "ERROR_MESSAGE_STANDALONE_TRUE": "The page used in 'footer -> $component' has standAloneView set to true. This node must be set to false.",
          "ERROR_MESSAGE_PAGE_MISSING": "The page used in 'footer -> $component' does not exist." 
        }
      },
      "SUCCESS_MESSAGE": "project-config.json processed successfully!",
      "PROCESSING_MESSAGE": "Validating project-config.json......",
      "OUTPUT_ERROR_HEADER": "{0} Found ({1}):",
      "TYPE_ERROR": "Errors",
      "TYPE_WARNING": "Warnings"
    }
  },
  "templateNames": {
    "disallowed": {
      "startsWith": [
        "template"
      ],
      "equals": [
        "service",
        "translate",
        "utils"
      ]
    }
  },
  "logger": {
    "allowLogging": false,
    "logLevel": 1
  }
}